# ------ Set Options for Projects --------------- #
MESSAGE(STATUS "Set Options for Project")

## CMake minimum version required
cmake_minimum_required(VERSION 3.11)

## Make Project Name
set(PROJECT_NAME "MemoryManager")
## Project name
project(${PROJECT_NAME})

## Set CXX Compiler Version
set(CMAKE_CXX_STANDARD 17)

MESSAGE(STATUS "Setting Done")
# ----------------------------------------------- #



# ------ Set Files ------------------------------ #
MESSAGE(STATUS "Set Source File")

## Set Directories
SET( MAIN_DIR ${CMAKE_SOURCE_DIR} )
SET( MEMORY_DIR ${MAIN_DIR}/MemoryPool )

## Source Directories
SET( MEMORY_MANAGER_SOURCES 
    ${MEMORY_DIR}/IMemoryPool.h
    ${MEMORY_DIR}/MemoryPool.h
    ${MEMORY_DIR}/MemoryManager.h
    ${MEMORY_DIR}/MemoryManager.cpp
)

## Set Option to build which as static or dynamic library
OPTION( BUILD_STATIC_LIBRARY ON )

IF ( BUILD_STATIC_LIBRARY )
    ADD_LIBRARY( ${PROJECT_NAME} STATIC ${MEMORY_MANAGER_SOURCES} )
    MESSAGE( STATUS "Build MemoryManager as a static library" )
ELSE ()
    ADD_LIBRARY( ${PROJECT_NAME} SHARED ${MEMORY_MANAGER_SOURCES} )
    MESSAGE( STATUS "Build MemoryManager as a dynamic library" )
ENDIF()

SET( FILES_DIR "include/MemoryManager" CACHE PATH "Directory for installing MemoryManager ")

MESSAGE( STATUS "Setting Done ")
# ----------------------------------------------- #

TARGET_INCLUDE_DIRECTORIES( ${PROJECT_NAME} PUBLIC ${MEMORY_DIR} ${UTILS_DIR} )

INSTALL( TARGETS ${PROJECT_NAME}
    ARCHIVE DESTINATION lib 
    LIBRARY DESTINATION lib
    RUNTIME DESTINATION bin
)
INSTALL( FILES ${MEMORY_MANAGER_SOURCES} DESTINATION ${FILES_DIR} )